Кэширование Данных

1) На уровне памяти Memcached
2) На уровне БД
3) На уровне файловой системы   (Этот наиболее используемый)

Настроим механизм кэширования для третьего типа:

    - в settings.py прописать словарь CASHES

    - Закэшируем классы представления:
        Так как мы используем классы представления (в доках описано как кэшировать функции представления),
        то нам надо перейти в women/urls.py, импортировать декоратор cache_page (который приведен в доках)
        далее в функциях path, классы которых мы хотим закэшировать, прописываем декоратор,
        как вызываемую функцию, тем временем передавая в неё как аргумент время кэширования (в секундах)
        После всего этого, класс представления, который будем кэшировать оборачиваем в круглые скобки,
        вместе с функцией as_view:

            path("", cache_page(60)(WomenHome.as_view()), name="home").

        Таким образом можно обернуть в этот декоратор все нужные классы/фунцкии представления.


Настроим механизм кэширования через шаблоны:

    - С помощью добавления тега cache можно кэшировать отдельные элементы шаблона
    {% load cache %} - в любом месте шаблона.
    Использование в шаблоне:
        {% cache <время кэширования в секундах> <имя блока, который надо откэшировать>%}
        <...блок верстки...>
        {% endcache %}


Настроим кэширование с помощью использования API django низкого уровня:

    функции представлены на тайм-коде 12:50 в видосе, либо же искать в доках как cache.set()/cache.get() и тд...
    Модуль, через который происходит работа с API:
    from django.core.cache import cache

    - в women.urls.py закэшируем запрос к бд в классе DataMixin, который происходит в get_user_context:
        Перед запросом к бд (созданием переменной cats) пропишем:

        cats = cache.get('cats') # Читаем коллекцию cats по ключу - 'cats' (название произвальное)
        if not cats: # Если данные не были прочитанны (вообще можно попробовать: if cats is None)
            <ВЫПОЛНЯЕМ ТОТ САМЫЙ ЗАПРОС К БД>
            cache.set("cats", cats, 60)   # Заносим данные коллекции cats по ключу 'cats' в кэш, на 60 сек.

ПРИМЕЧАНИЕ: Чтобы в процессе программирования отслеживать все нагрузки, которые происходят при формировании
ответов к серверу, необходимо добавлять кэширование сайту в последнюю очередь! Кэширование может скрывать
от разработчика некоторые SQL-запросы вводя его в заблуждение. Кэш, как правило, подключается
В САМУЮ ПОСЛЕДНЮЮ ОЧЕРЕДЬ.


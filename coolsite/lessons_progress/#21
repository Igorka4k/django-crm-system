Django debug toolbar

pip install django-debug-toolbar

в settings.py:
    Добавить в INSTALLED APPS "debug_toolbar" и,
    в MIDDLEWARE "debug_toolbar.middleware.DebugToolbarMiddleWare".
    Потом создать INTERNAL_IPS и добавить в него "127.0.0.1" и "localhost".

в coolsite/urls.py:
    if settings.DEBUG:
        import debug_toolbar
        urlpatterns.extend([
        path("__debug__/", include(debug_toolbar.urls)),])

Редачим дублирование в SQL запросов с помощью соответствующей вкладке на сайте.

- select_related("<имя переменной, которая является ForeignKey>")
    Данный метод загружает все данные связанных с основной таблицей таблиц,
    таким образом в классе представления WomenHome, выбирая query_set, мы добавим выбор
    также всех данных из таблицы категорий, передав в эту функцию (select_related) аргумент 'cat'.

- prefetch_related("имя переменной, которая является ManyToManyField ")

Дело в том, что добавляя такой "Жадный" запрос, который позволяет забрать все необходимые данные
в логике класса представления, позволяет передавать в шаблон html только, непосредственно, данные,
а в противном случае, в html шаблоне происходило бы обращение к ключу cat, которое способствовало бы
лишнему запросу к бд для получения данных.

Примечание: Где-то есть существенный говнокод, т.к. запросов получилось больше, и есть дублирования.
Надо бы научиться на лету дебажить дублирования, нужно больше практики.
